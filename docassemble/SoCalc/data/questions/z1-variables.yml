---
mandatory: true
code: |
  CaseNum = url_args.get('CaseNumber', 'unknown')
  Division = url_args.get('Division', 'Districtwide')
  Division = Division.upper()
  ProsecutorName = url_args.get('ProsecutorName', ' ')
  DefendantName = url_args.get('DefendantName', ' ')
  OrderIssued  = url_args.get('OrderIssueDate', '12/31/1999')
  OrderIssued  = format_date(OrderIssued , format='long')
  Conference = url_args.get('ConferenceDate', '12/31/1999')
  Conference = format_date(Conference, format='long')
  InitialDisc = url_args.get('InitialDisclosuresDate', '12/31/1999')
  InitialDisc = format_date(InitialDisc, format='long')
  JoinAmend = url_args.get('JoinDate', '12/31/1999')
  JoinAmend = format_date(JoinAmend, format='long')
  PlaIDExperts = url_args.get('PlantiffIDDate', '12/31/1999')
  PlaIDExperts = format_date(PlaIDExperts, format='long')
  DftIDExperts = url_args.get('DefendantIDDate', '12/31/1999')
  DftIDExperts = format_date(DftIDExperts, format='long')
  Custodian = url_args.get('CustodianDate', '12/31/1999')
  Custodian = format_date(Custodian, format='long')
  Discovery = url_args.get('DiscoveryDate', '12/31/1999')
  Discovery = format_date(Discovery, format='long')
  LimineDate = url_args.get('LimineDate', '12/31/1999')
  LimineDate = format_date(LimineDate, format='long')
  OtherMotion = url_args.get('OtherDate', '12/31/1999')
  OtherMotion = format_date(OtherMotion, format='long')
  Mediation = url_args.get('MediationDate', '12/31/1999')
  Mediation = format_date(Mediation, format='long')
  PretrialBriefs = url_args.get('PretrialBriefsDate', '12/31/1999')
  PretrialBriefs = format_date(PretrialBriefs, format='long')
  JurySelDate = url_args.get('JurySelectionDate', '12/31/1999')
  JurySelDate = format_date(JurySelDate, format='long')
  ADRDate = url_args.get('ADRDate', '12/31/1999')
  ADRDate = format_date(ADRDate, format='long')
  FirstAppear = url_args.get('FirstAppearanceDate', '12/31/1999')
  FirstAppear = format_date(FirstAppear, format='long')
  AnswerDate = url_args.get('AnsweredDate', '12/31/1999')
  AnswerDate = format_date(AnswerDate, format='long')
  DiscoveryReport = url_args.get('DiscoveryReportDate', '12/31/1999')
  DiscoveryReport = format_date(DiscoveryReport, format='long')
  PlaDftT2Date = url_args.get('PlaintiffDate', '12/31/1999')
  PlaDftT2Date = format_date(PlaDftT2Date, format='long')
  ReportFiling = url_args.get('ReportFilingDate', '12/31/1999')
  ReportFiling = format_date(ReportFiling, format='long')
  MIL = url_args.get('MotionInLimine', '12/31/1999')
  MIL = format_date(MIL, format='long')
  JointStatFiling = url_args.get('JointStatusReport', '12/31/1999')
  JointStatFiling = format_date(JointStatFiling, format='long')
  Resp2MIL = url_args.get('ResponseToMIL', '12/31/1999')
  Resp2MIL = format_date(Resp2MIL, format='long')
  Repl2MIL = url_args.get('ReplyToMIL', '12/31/1999')
  Repl2MIL = format_date(Repl2MIL, format='long')
  Req2Charge = url_args.get('RequestsToCharge', '12/31/1999')
  Req2Charge = format_date(Req2Charge, format='long')
  ListOfJurors = url_args.get('ListOfJurors', '12/31/1999')
  ListOfJurors = format_date(ListOfJurors, format='long')
  JSumQstAvail = url_args.get('JurorQuestionnaires', '12/31/1999')
  JSumQstAvail = format_date(JSumQstAvail, format='long')
  StrikesSubmitted = url_args.get('StrikesForCause', '12/31/1999')
  StrikesSubmitted = format_date(StrikesSubmitted, format='long')
  Today = today() 
  getValues = True
  ReturnDoc
reconsider: True
---
